<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描控制层组件-->
    <context:component-scan base-package="com.atyyx.SpringMVC"/>

    <!--配置Thymeleaf视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">   <!--模板引擎-->
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">   <!--模板解析器-->
                    <!--
                        被SpringResourceTemplateResolver视图解析器解析的视图就叫
                        ThymeleafView
                    -->
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!--视图前端：物理视图就是当前要访问的视图的一个完整的路径-->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!--视图后端   逻辑视图就是当前要访问的视图去掉视图的前缀和视图后缀-->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
        创建一个视图控制器
        将请求路径是/是请求直接绑定到视图index上

    -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/to/add" view-name="employee_add"/>

    <!--
        配置默认的Servlet处理器
        先由默认的开启处理处理，如果默认的处理不了在由DispatchServlet来处理

        当前工程的web.xml配置的前端控制器DispatcherServlet的url-pattern是/
        tomcat的web.xml配置的DefaultServlet的url-pattern也是/
        此时，浏览器发送的请求会优先被xml配置的前端控制器DispatcherServlet进行处理
        但是xml配置的前端控制器DispatcherServlet无法处理静态资源
        如果我们配置了  <mvc:default-servlet-handler/>，此时浏览器发送的所有请求
        都会被DefaultServlet处理
        若配置了 <mvc:default-servlet-handler/>和  <mvc:annotation-driven/>
        浏览器发送的请求会先被DefaultServlet，无法处理的话再交给DispatcherServlet
    -->
    <mvc:default-servlet-handler/>


    <!--
        开启MVC的注解驱动
        表示从当前视图控制器设置的请求和控制器的请求都会被处理
        若设置视图控制器，则只有视图控制器的请求会被处理，其他的请求全部404
        mvc:annotation-driven 开启MVC注解驱动
    -->
    <mvc:annotation-driven/>



    <!--配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    </bean>



</beans>